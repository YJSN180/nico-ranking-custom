name: Update Nico Ranking Data (Parallel)

on:
  # Temporarily disabled to test non-parallel version
  # schedule:
  #   # Run every 10 minutes - EXACTLY THE SAME AS ORIGINAL
  #   - cron: '*/10 * * * *'
  workflow_dispatch: # Allow manual trigger
  
jobs:
  # Step 0: Fetch NG list once to avoid rate limiting
  fetch-ng-list:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Fetch NG List from KV
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_KV_NAMESPACE_ID: ${{ secrets.CLOUDFLARE_KV_NAMESPACE_ID }}
        CLOUDFLARE_KV_API_TOKEN: ${{ secrets.CLOUDFLARE_KV_API_TOKEN }}
      run: npx tsx scripts/fetch-ng-list.ts
    
    - name: Upload NG List
      uses: actions/upload-artifact@v4
      with:
        name: ng-list
        path: ng-list.json
        retention-days: 1

  # Step 1: Fetch rankings in parallel groups
  fetch-rankings:
    needs: fetch-ng-list
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Split 23 genres into 6 groups (about 4 genres per group)
        # This provides good parallelization while respecting rate limits
        group: [1, 2, 3, 4, 5, 6]
      max-parallel: 6
      fail-fast: false # Continue other groups even if one fails
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download NG List
      uses: actions/download-artifact@v4
      with:
        name: ng-list
        path: ./
    
    - name: Fetch rankings for group ${{ matrix.group }}
      env:
        # Cloudflare KV credentials - EXACTLY THE SAME AS ORIGINAL
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_KV_NAMESPACE_ID: ${{ secrets.CLOUDFLARE_KV_NAMESPACE_ID }}
        CLOUDFLARE_KV_API_TOKEN: ${{ secrets.CLOUDFLARE_KV_API_TOKEN }}
      run: |
        echo "Starting group ${{ matrix.group }} at $(date)"
        npx tsx scripts/update-ranking-parallel.ts --group ${{ matrix.group }} 6
    
    - name: Upload partial results
      uses: actions/upload-artifact@v4
      with:
        name: ranking-data-group-${{ matrix.group }}
        path: ./tmp/ranking-group-${{ matrix.group }}.json
        retention-days: 1
        if-no-files-found: error

  # Step 2: Aggregate results and write to KV
  aggregate-and-write:
    needs: fetch-rankings
    runs-on: ubuntu-latest
    if: always() # Run even if some groups failed
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create temp directory
      run: mkdir -p ./tmp
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./tmp
        pattern: ranking-data-group-*
    
    - name: List downloaded files
      run: |
        echo "Downloaded artifacts:"
        ls -la ./tmp/
        find ./tmp -name "*.json" -exec basename {} \; | sort
    
    - name: Move files to correct location
      run: |
        # GitHub Actions creates subdirectories for each artifact
        # First, show the structure
        echo "Directory structure before moving:"
        find ./tmp -type f -name "*.json" | sort
        
        # Move all JSON files to the tmp directory root
        # Use a more robust approach that handles nested directories
        for file in $(find ./tmp -type f -name "*.json" | grep -v "^./tmp/[^/]*\.json$"); do
          echo "Moving: $file"
          mv "$file" ./tmp/ 2>/dev/null || echo "Failed to move: $file"
        done
        
        echo ""
        echo "Files after moving:"
        ls -la ./tmp/ranking-group-*.json 2>/dev/null || echo "No ranking group files found"
        echo ""
        echo "Total group files found: $(ls ./tmp/ranking-group-*.json 2>/dev/null | wc -l)"
    
    - name: Aggregate and write to KV
      env:
        # Cloudflare KV credentials - EXACTLY THE SAME AS ORIGINAL
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_KV_NAMESPACE_ID: ${{ secrets.CLOUDFLARE_KV_NAMESPACE_ID }}
        CLOUDFLARE_KV_API_TOKEN: ${{ secrets.CLOUDFLARE_KV_API_TOKEN }}
      run: |
        echo "Aggregating results and writing to KV..."
        echo "Expected 8 group files, found $(ls ./tmp/ranking-group-*.json 2>/dev/null | wc -l)"
        npx tsx scripts/aggregate-ranking-results.ts
    
    - name: Report completion
      run: |
        echo "âœ… Ranking update completed at $(date)"
        echo "Check the logs above for details on processing time and item counts."